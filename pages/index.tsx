import Head from 'next/head';
import Image from 'next/image';
import LandingPage from '../components/Landingpage/landingpage';
import { gql } from '@apollo/client';
import client from '../apollo-client';
import { HOMEPAGEINTERFACE } from '../graphql_api/homePage';
import { HOMEPAGE } from '../graphql_api/homePage';

interface IProps {
  featuredExp: any;
  citydropdown: any;
  HomePage: any;
}
export default function Home({ featuredExp, citydropdown, HomePage }: IProps) {
  return (
    <>
      <Head>
        <title className="text-3xl font-bold underline">See Sight Tours</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <LandingPage
          featuredExp={featuredExp}
          citydropdown={citydropdown}
          HomePage={HomePage}
        />
      </main>
    </>
  );
}

export async function getStaticProps() {
  const { data } = await client.query({
    query: gql`
      query FEATUREDEXPERIENCES(
        $dayTours: Boolean!
        $multiday: Boolean!
        $airportTransfers: Boolean!
      ) {
        homePage {
          header
          subheader
          allThings: all_things_to_do {
            product {
              id: boat_id
              name
              slug
              duration
              price
              cardMessage: card_message
              cardSnippet: snippet
              cardMedia: card_media {
                name
                alt: alternativeText
                url
                fragment: caption
                type: provider_metadata
              }
              reviews {
                id
                rating
              }
            }
          }
          dayTours: one_day_tours @include(if: $dayTours) {
            product {
              id: boat_id
              name
              slug
              duration
              price
              cardMessage: card_message
              cardSnippet: snippet
              cardMedia: card_media {
                name
                alt: alternativeText
                url
                fragment: caption
                type: provider_metadata
              }
              reviews {
                id
                rating
              }
            }
          }
          multiday: multi_day_tours @include(if: $multiday) {
            product {
              id: boat_id
              name
              slug
              duration
              price
              cardMessage: card_message
              cardSnippet: snippet
              cardMedia: card_media {
                name
                alt: alternativeText
                url
                fragment: caption
                type: provider_metadata
              }
              reviews {
                id
                rating
              }
            }
          }
          airportTransfers: airport_transfer @include(if: $airportTransfers) {
            product {
              id: boat_id
              name
              slug
              duration
              price
              cardMessage: card_message
              cardSnippet: snippet
              cardMedia: card_media {
                name
                alt: alternativeText
                url
                fragment: caption
                type: provider_metadata
              }
              reviews {
                id
                rating
              }
            }
          }
        }
        citiesDropdown: cities {
          id
          name
          slug
        }

        totalProducts: productsConnection {
          aggregate {
            totalCount
          }
        }
        totalDayTours: productsConnection(where: { type: "DAYTOUR" }) {
          aggregate {
            count
          }
        }
        totalMultiDay: productsConnection(where: { type: "MULTIDAY" }) {
          aggregate {
            count
          }
        }
        totalAirportPickup: productsConnection(
          where: { type: "AIRPORTPICKUP" }
        ) {
          aggregate {
            count
          }
        }
      }
    `,
    variables: {
      dayTours: true,
      multiday: true,
      airportTransfers: false
    }
  });
  const { data: HomePage } = await client.query<HOMEPAGEINTERFACE>({
    query: HOMEPAGE,
    variables: {
      guides: false
    }
  });
  return {
    props: {
      featuredExp: data.homePage,
      citydropdown: data.citiesDropdown,
      HomePage: HomePage
    }
  };
}
